group 'com.mycarx.wxweb'
version '1.0'

buildscript {
    ext {
        kotlin_version = '1.2.30'
        spring_boot_version = '1.5.9.RELEASE'
    }

    repositories {        
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://jitpack.io" }
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "io.spring.gradle:propdeps-plugin:0.0.9.RELEASE"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.4"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-jpa"
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'

repositories {    
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "http://repo.spring.io/plugins-release" }
    maven { url "https://jitpack.io" }
    mavenCentral()
}

dependencies {
    compile(
            "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0",
            "org.springframework.boot:spring-boot-starter-web:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-data-jpa:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-data-redis:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-cache:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-websocket:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-parent:$spring_boot_version",
            "org.thymeleaf:thymeleaf:3.0.7.RELEASE",
            "org.thymeleaf:thymeleaf-spring4:3.0.7.RELEASE",
            "org.springframework.session:spring-session:1.3.1.RELEASE",
            "org.apache.commons:commons-lang3:3.7",
            "org.apache.httpcomponents:httpclient:4.5.2",
            "commons-codec:commons-codec:1.10",
            "commons-io:commons-io:2.5",
            "commons-fileupload:commons-fileupload:1.3.3",
            "commons-configuration:commons-configuration:1.10",
            "ch.qos.logback:logback-core:1.1.11",
            "ch.qos.logback:logback-classic:1.1.11",
            "com.alibaba:druid:1.1.8",
            "mysql:mysql-connector-java",
            "net.spy:spymemcached:2.11.4",
            "com.aliyun:aliyun-java-sdk-dysmsapi:1.0.0",
            "com.aliyun:aliyun-java-sdk-core:3.3.1",
            "com.github.wxpay:WXPay-SDK-Java:0.0.4",
            "org.dom4j:dom4j:2.1.0"
    )

    compile('org.projectlombok:lombok')
    compile group: 'biz.paluch.redis', name: 'lettuce', version: '4.3.2.Final'
    optional "org.springframework.boot:spring-boot-configuration-processor"
    testCompile group: "junit", name: "junit", version: "4.12"
    testCompile "org.springframework.boot:spring-boot-starter-test:$spring_boot_version"
    runtime "org.springframework.boot:spring-boot-starter-tomcat:$spring_boot_version"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileJava.dependsOn(processResources)

jar {
    manifest {
        attributes("Main-Class": "com.mycarx.wxweb.WebApplication")
    }
}
bootRun {
    addResources = true
}

springBoot {
    mainClass = "com.mycarx.wxweb.WebApplication"
}

mainClassName = "com.mycarx.wxweb.WebApplication"

kapt {
    useBuildCache = true
}

task copyDepJars(type: Copy) {
    from configurations.runtime
    into 'dist'
}

task copyAssets(type: Copy) {
    from 'build/resources/main/static'
    into 'build/web/static'
}

task copyHtmls(type: Copy) {
    from 'build/resources/main/templates'
    into 'build/web/templates'
}

task releaseJar(type: Jar, dependsOn: [copyDepJars, classes, copyAssets, copyHtmls]) {
    from 'build/classes/java/main'
    from 'build/classes/kotlin/main'
    from 'build/resources/main/logback.xml'
    from 'build/web'

    baseName 'weixinWeb'
    archiveName "${baseName}-release-${version}.jar"
    manifest {
        attributes("Main-Class": "com.mycarx.wxweb.WebApplication")
    }
}